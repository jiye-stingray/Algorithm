# n명의 학생의 수학성적이 주어진다. N명의 학생들의 평균(소수 첫번째 자리 반올림)을 구하고,
#  N명의 학생 중 평균에 가까운 학생은 몇 번째 학생인지 출력하는 프로그램을 작성하세요.

# 답이 2개일 경우 성적이 높은 학생의 번호를 출력하시오. 만약 답이 되는 점수가 여러 개 일 경우 번호가 빠른 학생의 번호를 답으로 한다.

##- 입력

# 첫줄에 자연수 N이 주어지고, 두번째 줄에는 N개의 자연수가 주어진다.

# 학생의 번호는 앞에서 부터 1부터 N까지 이다.

## - 출력

# 첫 줄에 평균과 평균에 가까운 학생의 번호를 출력한다.

# 평균은 소수 첫째 자리에서 반올림 한다.

## - 입력예제 1

# 첫번째 줄: 10

# 두번째 줄: 65, 73, 66, 87, 92, 67, 55, 79, 75, 80

## - 출력예제

# 74, 9

#====================================================================
# 대표 값 입력
n = int(input())
arr = list(map(int,input().split()))

# round() = 소수 첫째 자리에서 반올림 한다
# sum() = list의 모든 값을 합한다.
avg = round(sum(arr)/n)

# 거리값이 가장 작은 것을 계속 비교해줄 함수.
# 초기에는 절대 이보다 클 수없는 큰 값을 넣어준다
min = len(arr) + 55

#idx = 학생의 인덱스
# x = 값
# enumerate(): idx에는 인덱스, x는 값을 반환한다.
for idx, x in enumerate(arr):
    #abs: 값 과의 거리
    tmp = abs(x - avg)

    #거리 값이 가장 가까운 학생이 평균과 가장 가깝다.
    if tmp<min:
        #index와 값 저장
        min = tmp
        score = x
        #학생 번호 저장
        res = idx + 1

    #같은 거리가 나왔을 때
    # ex 입력 64
    #배열 73 75 75 75
    # 73하고도 1, 75하고도 거리 1
    #답이 2개인 경우 더 큰 정수로 출력
    elif tmp == min:
        #작은 번호만 출력이기 때문에 >=가 아님
        if x>score:
            score = x
            res = idx+1

print(avg,res)

